#!/bin/bash

##################
# Load mpicc and mpicxx into $PATH
##################

#. /usr/share/[mM]odules/init/bash
#module load mvapich2-gnu-psm/1.7

. /usr/local/tools/dotkit/init.sh
use mvapich2-gnu

# MVAPICH
#curdir=`pwd`
#export PATH="${curdir}/mvapich2/install/bin:$PATH"

# Open MPI
#curdir=`pwd`
#export PATH="${curdir}/openmpi/install/bin:$PATH"

##################
# Build software
##################

set -x

OPT="-g -O0"

installdir=`pwd`/install

# fetch dcp source code
if [ ! -d "dcp.git" ] ; then
  git clone git://github.com/hpc/dcp.git dcp.git

  # switch to bayer branch
  pushd dcp.git
    git checkout bayer
  popd
fi

# build bayer library
mpicc ${OPT} -o bayer_util.o -c bayer_util.c
mpicc ${OPT} -o bayer_path.o -c bayer_path.c
mpicc ${OPT} -o bayer_io.o   -c bayer_io.c
ar cru libbayer.a \
  bayer_util.o \
  bayer_path.o \
  bayer_io.o
ranlib libbayer.a

# build dwalk command
mpicxx ${OPT} -o dwalk dwalk.cpp \
  -I${installdir}/include -L${installdir}/lib -Wl,-rpath,${installdir}/lib -lcircle -llwgrp -ldtcmp -L./ -lbayer

# build drm command
mpicxx ${OPT} -o drm drm.cpp \
  -I${installdir}/include -L${installdir}/lib -Wl,-rpath,${installdir}/lib -lcircle -llwgrp -ldtcmp -L./ -lbayer

# build dcp command
pushd dcp.git
  # need to run configure once to build config.h
  if [ ! -f config.h ] ; then
    export PKG_CONFIG_PATH="${installdir}/lib/pkgconfig"
    export CFLAGS="-g -O0"
    ./configure --prefix=$installdir --disable-silent-rules
  fi

  # build dcp command
  pushd src
    mpicc ${OPT} -o dcp common.c handle_args.c treewalk.c copy.c cleanup.c compare.c dcp.c \
      -I../. -I${installdir}/include -L${installdir}/lib -Wl,-rpath,${installdir}/lib -lcircle \
      -I../../. -L../../ -lbayer
  popd
popd

exit 0

# build dcp command
pushd dcp.git
#  make distclean
  ./autogen.sh
  export PKG_CONFIG_PATH="${installdir}/lib/pkgconfig"
  export CFLAGS="-g -O0"
  ./configure --prefix=$installdir --disable-silent-rules
  make clean
  make VERBOSE=1
  make VERBOSE=1 install
popd

# cp -pr dir1 dir2
# if dir2 exists and is directory
#   copy dir1 into dir2
# if dir2 exists and is file
#   fail
# if dir2 does not exist
#   copy dir1 as dir2

# cp -pr dir1/. dir2
# if dir2 exists and is directory
#   copy contents of dir1 into dir2
# if dir2 exists and is file
#   fail
# if dir2 does not exist
#   mkdir dir2 and copy dir1 into dir2

# cp -pr dir1/ dir2
# if dir2 exists and is directory
#   copy dir1 into dir2
# if dir2 does not exist
#   mkdir dir2 and copy dir1 into dir2

